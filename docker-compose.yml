version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: cinenacional-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: cinenacional
      POSTGRES_PASSWORD: Paganitzu
      POSTGRES_DB: cinenacional
      # Configuración de pool
      POSTGRES_MAX_CONNECTIONS: 200
      POSTGRES_SHARED_BUFFERS: 256MB
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
      - ./init:/docker-entrypoint-initdb.d  # Scripts de inicialización
    # REMOVIDO ports - Solo accesible internamente
    # ports:
    #   - "5432:5432"
    expose:
      - "5432"
    networks:
      - cinenacional-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cinenacional"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Límites de recursos
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
    # Configuración adicional
    command: >
      postgres
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=80MB
      -c max_wal_size=1GB
      -c log_min_duration_statement=1000

  redis:
    image: redis:7-alpine
    container_name: cinenacional-redis
    restart: unless-stopped
    # REMOVIDO ports - Solo accesible internamente
    # ports:
    #   - "6379:6379"
    expose:
      - "6379"
    networks:
      - cinenacional-network
    volumes:
      - redis_data:/data
    # Configuración de Redis optimizada para caché
    command: >
      redis-server
      --appendonly yes
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --tcp-keepalive 60
      --timeout 300
      --tcp-backlog 511
      --databases 16
      --save 900 1
      --save 300 10
      --save 60 10000
      --rdbcompression yes
      --rdbchecksum yes
      --stop-writes-on-bgsave-error yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Límites de recursos
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 768M
        reservations:
          cpus: '0.25'
          memory: 256M

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME: dzndglyjr
    container_name: cinenacional-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME=dzndglyjr
      - DATABASE_URL=postgresql://cinenacional:Paganitzu@postgres:5432/cinenacional?schema=public&connection_limit=50&pool_timeout=10
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=production
    # CAMBIO: ports -> expose
    # ports:
    #   - "3000:3000"
    expose:
      - "3000"
    networks:
      - cinenacional-network
    volumes:
      - ./public/uploads:/app/public/uploads
    # Límites de recursos
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    # Health check para la app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  redis_data:

networks:
  cinenacional-network:
    driver: bridge