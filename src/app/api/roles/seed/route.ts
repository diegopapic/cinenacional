// src/app/api/roles/seed/route.ts

import { NextResponse } from 'next/server';
import { prisma } from '@/lib/prisma';
import { Department } from '@/lib/roles/rolesTypes';
import { generateSlug } from '@/lib/utils/slugs';

// Roles iniciales por departamento
const INITIAL_ROLES_BY_DEPARTMENT = {
  [Department.DIRECCION]: [
    'Director',
    'Codirector', 
    'Primer Asistente de Direcci√≥n',
    'Segundo Asistente de Direcci√≥n',
    'Tercer Asistente de Direcci√≥n',
    'Ayudante de Direcci√≥n',
    'Continuista',
    'Script',
    'Director de Casting',
    'Asistente de Casting',
    'Casting'
  ],
  
  [Department.PRODUCCION]: [
    'Productor Ejecutivo',
    'Productor',
    'Coproductor',
    'Productor Asociado',
    'Producci√≥n Ejecutiva',
    'Jefe de Producci√≥n',
    'Direcci√≥n de Producci√≥n',
    'Coordinaci√≥n de Producci√≥n',
    'Asistente de Producci√≥n',
    'Dise√±o de Producci√≥n',
    'Coordinador General',
    'Jefe de Locaciones',
    'Chofer',
    'Transporte',
    'Localizaci√≥n'
  ],
  
  [Department.GUION]: [
    'Guionista',
    'Coguionista',
    'Adaptaci√≥n',
    'Argumento',
    'Historia Original',
    'Colaboraci√≥n en Gui√≥n',
    'Gui√≥n y Continuidad'
  ],
  
  [Department.FOTOGRAFIA]: [
    'Director de Fotograf√≠a',
    'Operador de C√°mara',
    'Primer Asistente de C√°mara',
    'Segundo Asistente de C√°mara',
    'Gaffer',
    'Electricista',
    'C√°mara y Electricidad'
  ],
  
  [Department.ARTE]: [
    'Director de Arte',
    'Dise√±ador de Producci√≥n',
    'Ambientador',
    'Escen√≥grafo',
    'Utilero',
    'Props Master',
    'Decoraci√≥n',
    'Especialistas'
  ],
  
  [Department.MONTAJE]: [
    'Editor',
    'Montajista',
    'Asistente de Montaje',
    'Edici√≥n',
    'Colorista'
  ],
  
  [Department.SONIDO]: [
    'Director de Sonido',
    'Sonidista',
    'Microfonista',
    'Dise√±ador de Sonido',
    'Editor de Di√°logos',
    'Mezclador'
  ],
  
  [Department.MUSICA]: [
    'Compositor',
    'Director Musical',
    'Arreglador',
    'Supervisor Musical',
    'M√∫sica',
    'Composici√≥n'
  ],
  
  [Department.VESTUARIO]: [
    'Dise√±ador de Vestuario',
    'Vestuarista',
    'Asistente de Vestuario',
    'Ambientador de Vestuario'
  ],
  
  [Department.MAQUILLAJE]: [
    'Maquillador Principal',
    'Caracterizador',
    'Efectos Especiales de Maquillaje',
    'Peluquero',
    'Asistente de Maquillaje',
    'Maquillaje'
  ],
  
  [Department.EFECTOS]: [
    'Supervisor de Efectos Especiales',
    'Efectos Especiales',
    'Pirotecnia',
    'Efectos Mec√°nicos',
    'Supervisor de VFX',
    'Artista VFX',
    'Coordinador VFX',
    'Editor VFX',
    'Efectos Visuales',
    'Director de Animaci√≥n',
    'Animador',
    'Asistente de Animaci√≥n',
    'Animaci√≥n'
  ]
} as const;

// Roles principales (primeros de cada departamento + algunos espec√≠ficos)
const MAIN_ROLES = [
  'Director',
  'Productor Ejecutivo',
  'Productor',
  'Guionista',
  'Director de Fotograf√≠a',
  'Director de Arte',
  'Editor',
  'Director de Sonido',
  'Compositor',
  'Dise√±ador de Vestuario',
  'Maquillador Principal',
  'Supervisor de Efectos Especiales',
  'Supervisor de VFX'
];

export async function POST() {
  try {
    let created = 0;
    let skipped = 0;

    console.log('üå± Iniciando seeding de roles...');

    for (const [department, roleNames] of Object.entries(INITIAL_ROLES_BY_DEPARTMENT)) {
      console.log(`\nüìÅ Procesando departamento: ${department}`);
      
      for (let i = 0; i < roleNames.length; i++) {
        const roleName = roleNames[i];
        const roleSlug = generateSlug(roleName);
        
        // Verificar si el rol ya existe
        const existingRole = await prisma.role.findUnique({
          where: { slug: roleSlug }
        });

        if (existingRole) {
          console.log(`‚è≠Ô∏è Rol "${roleName}" ya existe`);
          skipped++;
          continue;
        }

        // Determinar si es rol principal
        const isMainRole = MAIN_ROLES.includes(roleName);

        // Crear rol
        await prisma.role.create({
          data: {
            name: roleName,
            slug: roleSlug,
            department: department as Department,
            isMainRole,
            isActive: true
          }
        });

        console.log(`‚úÖ Creado rol: ${roleName}${isMainRole ? ' (Principal)' : ''}`);
        created++;
      }
    }

    console.log(`\nüéâ Seeding completado: ${created} roles creados, ${skipped} omitidos`);

    return NextResponse.json({
      success: true,
      created,
      skipped,
      message: `Se crearon ${created} roles nuevos (${skipped} ya exist√≠an)`
    });

  } catch (error) {
    console.error('‚ùå Error en seeding:', error);
    return NextResponse.json(
      { 
        success: false, 
        error: 'Error interno del servidor',
        details: error instanceof Error ? error.message : 'Error desconocido'
      },
      { status: 500 }
    );
  }
}