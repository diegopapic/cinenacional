# .github/workflows/generate-structure.yml
name: Generate Project Structure

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Permite ejecutarlo manualmente

jobs:
  generate-structure:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Generate structure JSON
      run: |
        cat > generate-structure.js << 'EOF'
        const fs = require('fs');
        const path = require('path');

        function scanDirectory(dir, base = '') {
          const items = fs.readdirSync(dir);
          const result = {};
          
          items.forEach(item => {
            // Ignorar archivos y carpetas innecesarias
            if (item.startsWith('.') || 
                item === 'node_modules' || 
                item === '.next' ||
                item === 'out' ||
                item === 'coverage' ||
                item === 'project-structure.json') return;
            
            const fullPath = path.join(dir, item);
            const relativePath = path.join(base, item).replace(/\\/g, '/');
            
            try {
              const stats = fs.statSync(fullPath);
              
              if (stats.isDirectory()) {
                const subResult = scanDirectory(fullPath, relativePath);
                if (Object.keys(subResult).length > 0) {
                  result[item] = subResult;
                }
              } else if (item.match(/\.(ts|tsx|js|jsx|json|css|scss|md|sql|prisma|env\.example)$/)) {
                // Generar URL de GitHub
                result[item] = `https://raw.githubusercontent.com/${{ github.repository }}/main/${relativePath}`;
              }
            } catch (error) {
              console.error(`Error procesando ${fullPath}:`, error.message);
            }
          });
          
          return result;
        }

        const structure = {
          timestamp: new Date().toISOString(),
          repository: "${{ github.repository }}",
          branch: "main",
          commit: "${{ github.sha }}",
          structure: scanDirectory('.'),
          instructions: "INSTRUCCIONES PARA CLAUDE: Este es un mapa completo del repositorio generado automáticamente. Cada archivo tiene una URL que puedes usar con web_fetch para leer su contenido."
        };

        fs.writeFileSync('project-structure.json', JSON.stringify(structure, null, 2));
        console.log('✅ Estructura generada exitosamente');
        EOF

        node generate-structure.js

    - name: Commit and push if changed
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add project-structure.json
        git diff --quiet && git diff --staged --quiet || (git commit -m "Auto-update project structure [skip ci]" && git push)