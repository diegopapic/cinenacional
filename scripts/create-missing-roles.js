// scripts/create-missing-roles.js
require('dotenv').config({ path: '.env.local' });
const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

// Roles que necesitan crearse (del archivo roles-not-found.json)
const ROLES_TO_CREATE = [
  "Escenograf√≠a",
  "Vestuario",
  "Direcci√≥n de arte",
  "Asistente de escenograf√≠a",
  "Maquillaje",
  "Peinados",
  "Asistente de vestuario",
  "Efectos especiales",
  "Jefe de maquillaje",
  "Jefe de peinados",
  "Asistente de maquillaje",
  "Modista",
  "Asesor√≠a art√≠stica",
  "Ambientaci√≥n",
  "Ayudante de maquillaje",
  "Ayudante de escenograf√≠a",
  "VFX",
  "Utilero",
  "Ayudante de vestuario",
  "Realizaci√≥n de decorados",
  "Dise√±o de vestuario",
  "Realizaci√≥n escenogr√°fica",
  "Asesor√≠a de vestuario",
  "Refuerzo de peinados",
  "FX",
  "Making Of",
  "Realizaci√≥n de escenograf√≠a",
  "Refuerzo de maquillaje",
  "Maquillaje 2da unidad",
  "Peinados 2da unidad",
  "Meritorio de vestuario",
  "Dise√±o de Producci√≥n",
  "Asistente de arte",
  "Ayudante de arte",
  "Meritorio de arte",
  "Supervisor de Efectos Visuales",
  "Asistente de Making Off",
  "Utiler√≠a de efectos",
  "Carpintero",
  "Muralista",
  "Realizaci√≥n de vestuario",
  "Reemplazo de vestuario",
  "Equipo de vestuario",
  "1er asistente de arte",
  "1er asistente de vestuario",
  "Dise√±o de maquillaje",
  "Dise√±o de peinados",
  "Ayudante de peinados",
  "Meritorio de maquillaje",
  "Asistente de peinados",
  "2do asistente de arte",
  "Asistente de utilero",
  "Meritorio de peinados",
  "Ayudante de utiler√≠a",
  "Utilero de Avanzada",
  "Coordinaci√≥n FX",
  "Jefe t√©cnico de FX",
  "Estilista",
  "Constructor",
  "Fotos Making Off",
  "Direcci√≥n de Fxs",
  "Maqueta",
  "FX maquillaje",
  "2da unidad de arte",
  "Equipo de realizaci√≥n de arte",
  "Dise√±o y realizaci√≥n de m√°scaras y pelo",
  "Realizaci√≥n de cuerpos",
  "Concepto art√≠stico",
  "Coordinaci√≥n de FX f√≠sicos",
  "Maquillaje FX",
  "Supervisi√≥n de VFX",
  "Direcci√≥n de VFX",
  "Dise√±os",
  "Dise√±o de objetos",
  "Supervisor de FX",
  "Asistente de FX",
  "Supervisor de VFX",
  "FX de acci√≥n",
  "Arte en set",
  "Dise√±o de escenograf√≠a",
  "Asistente del Utilero de Avanzada",
  "Paisajista",
  "Refuerzo de vestuario",
  "Auxiliar de vestuario",
  "Asistencia de utiler√≠a",
  "2do asistente de vestuario",
  "3er asistente de arte",
  "Utilero de refuerzo"
];

// Mapeo de roles a departamentos
const ROLE_DEPARTMENT_MAP = {
  // ARTE
  'Escenograf√≠a': 'ARTE',
  'Vestuario': 'ARTE',
  'Direcci√≥n de arte': 'ARTE',
  'Asistente de escenograf√≠a': 'ARTE',
  'Maquillaje': 'ARTE',
  'Peinados': 'ARTE',
  'Asistente de vestuario': 'ARTE',
  'Jefe de maquillaje': 'ARTE',
  'Jefe de peinados': 'ARTE',
  'Asistente de maquillaje': 'ARTE',
  'Modista': 'ARTE',
  'Asesor√≠a art√≠stica': 'ARTE',
  'Ambientaci√≥n': 'ARTE',
  'Ayudante de maquillaje': 'ARTE',
  'Ayudante de escenograf√≠a': 'ARTE',
  'Utilero': 'ARTE',
  'Ayudante de vestuario': 'ARTE',
  'Realizaci√≥n de decorados': 'ARTE',
  'Dise√±o de vestuario': 'ARTE',
  'Realizaci√≥n escenogr√°fica': 'ARTE',
  'Asesor√≠a de vestuario': 'ARTE',
  'Refuerzo de peinados': 'ARTE',
  'Realizaci√≥n de escenograf√≠a': 'ARTE',
  'Refuerzo de maquillaje': 'ARTE',
  'Maquillaje 2da unidad': 'ARTE',
  'Peinados 2da unidad': 'ARTE',
  'Meritorio de vestuario': 'ARTE',
  'Dise√±o de Producci√≥n': 'ARTE',
  'Asistente de arte': 'ARTE',
  'Ayudante de arte': 'ARTE',
  'Meritorio de arte': 'ARTE',
  'Asistente de utilero': 'ARTE',
  'Utiler√≠a de efectos': 'ARTE',
  'Carpintero': 'ARTE',
  'Muralista': 'ARTE',
  'Realizaci√≥n de vestuario': 'ARTE',
  'Reemplazo de vestuario': 'ARTE',
  'Equipo de vestuario': 'ARTE',
  '1er asistente de arte': 'ARTE',
  '1er asistente de vestuario': 'ARTE',
  'Dise√±o de maquillaje': 'ARTE',
  'Dise√±o de peinados': 'ARTE',
  'Ayudante de peinados': 'ARTE',
  'Meritorio de maquillaje': 'ARTE',
  'Asistente de peinados': 'ARTE',
  '2do asistente de arte': 'ARTE',
  'Meritorio de peinados': 'ARTE',
  'Ayudante de utiler√≠a': 'ARTE',
  'Utilero de Avanzada': 'ARTE',
  'Estilista': 'ARTE',
  'Constructor': 'ARTE',
  'Maqueta': 'ARTE',
  '2da unidad de arte': 'ARTE',
  'Equipo de realizaci√≥n de arte': 'ARTE',
  'Dise√±o y realizaci√≥n de m√°scaras y pelo': 'ARTE',
  'Realizaci√≥n de cuerpos': 'ARTE',
  'Concepto art√≠stico': 'ARTE',
  'Dise√±os': 'ARTE',
  'Dise√±o de objetos': 'ARTE',
  'Arte en set': 'ARTE',
  'Dise√±o de escenograf√≠a': 'ARTE',
  'Asistente del Utilero de Avanzada': 'ARTE',
  'Paisajista': 'ARTE',
  'Refuerzo de vestuario': 'ARTE',
  'Auxiliar de vestuario': 'ARTE',
  'Asistencia de utiler√≠a': 'ARTE',
  '2do asistente de vestuario': 'ARTE',
  '3er asistente de arte': 'ARTE',
  'Utilero de refuerzo': 'ARTE',
  
  // EFECTOS
  'Efectos especiales': 'EFECTOS',
  'VFX': 'EFECTOS',
  'FX': 'EFECTOS',
  'Supervisor de Efectos Visuales': 'EFECTOS',
  'Coordinaci√≥n FX': 'EFECTOS',
  'Jefe t√©cnico de FX': 'EFECTOS',
  'Direcci√≥n de Fxs': 'EFECTOS',
  'FX maquillaje': 'EFECTOS',
  'Coordinaci√≥n de FX f√≠sicos': 'EFECTOS',
  'Maquillaje FX': 'EFECTOS',
  'Supervisi√≥n de VFX': 'EFECTOS',
  'Direcci√≥n de VFX': 'EFECTOS',
  'Supervisor de FX': 'EFECTOS',
  'Asistente de FX': 'EFECTOS',
  'Supervisor de VFX': 'EFECTOS',
  'FX de acci√≥n': 'EFECTOS',
  
  // OTROS
  'Making Of': 'OTROS',
  'Asistente de Making Off': 'OTROS',
  'Fotos Making Off': 'OTROS'
};

function generateSlug(name) {
  return name
    .toLowerCase()
    .normalize('NFD')
    .replace(/[\u0300-\u036f]/g, '')
    .replace(/[^a-z0-9]+/g, '-')
    .replace(/^-|-$/g, '');
}

async function createMissingRoles() {
  try {
    console.log('üöÄ Creando roles faltantes...\n');
    console.log(`üìã ${ROLES_TO_CREATE.length} roles a verificar\n`);

    // Obtener roles existentes
    const existingRoles = await prisma.role.findMany({
      select: { name: true }
    });
    
    const existingNames = new Set(
      existingRoles.map(r => r.name.toLowerCase().trim())
    );

    console.log(`üìä Roles actuales en BD: ${existingRoles.length}\n`);

    // Preparar roles para insertar
    const rolesToInsert = [];
    const skipped = [];

    for (const roleName of ROLES_TO_CREATE) {
      // Verificar si ya existe
      if (existingNames.has(roleName.toLowerCase().trim())) {
        skipped.push(roleName);
        continue;
      }

      const department = ROLE_DEPARTMENT_MAP[roleName] || 'OTROS';
      const slug = generateSlug(roleName);

      rolesToInsert.push({
        name: roleName,
        slug: slug,
        department: department,
        isActive: true,
        isMainRole: false
      });
    }

    console.log(`‚úÖ Roles a insertar: ${rolesToInsert.length}`);
    console.log(`‚è≠Ô∏è  Roles ya existentes: ${skipped.length}\n`);

    if (skipped.length > 0) {
      console.log('Ejemplos de roles ya existentes:');
      skipped.slice(0, 5).forEach(r => console.log(`  - ${r}`));
      if (skipped.length > 5) {
        console.log(`  ... y ${skipped.length - 5} m√°s\n`);
      }
    }

    if (rolesToInsert.length > 0) {
      console.log('\nüíæ Insertando nuevos roles...');
      
      // Insertar usando createMany
      const result = await prisma.role.createMany({
        data: rolesToInsert,
        skipDuplicates: true
      });

      console.log(`\nüéâ Total insertado: ${result.count} roles`);
    } else {
      console.log('\n‚ú® Todos los roles ya existen, no hay nada que insertar');
    }

    // Verificar total final
    const totalCount = await prisma.role.count();
    console.log(`\nüìä Total de roles en la tabla: ${totalCount}`);

    // Mostrar distribuci√≥n por departamento
    const byDepartment = await prisma.role.groupBy({
      by: ['department'],
      _count: true
    });

    console.log('\nüìà Distribuci√≥n por departamento:');
    byDepartment
      .sort((a, b) => b._count - a._count)
      .forEach(dept => {
        console.log(`  ${dept.department}: ${dept._count}`);
      });

  } catch (error) {
    console.error('‚ùå Error:', error);
  } finally {
    await prisma.$disconnect();
  }
}

createMissingRoles();